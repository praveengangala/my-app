apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  labels:
    app: my-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      initContainers:
      - name: init-my-service
        image: busybox
        command: ['sh', '-c', 'echo Initializing... && sleep 5']
        # This simulates some pre-start work, like DB migrations or config setup

      containers:
      - name: my-app-container
        image: praveengangala/my-app:latest
        ports:
        - containerPort: 5000
        readinessProbe:
          httpGet:
            path: /healthz       # Your app should respond 200 here for ready state
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /healthz       # Your app should respond 200 here for alive state
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 20
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        env:
          - name: ENVIRONMENT
            value: "production"
        # Add volumeMounts here if your app needs config or persistent data

      # Add volumes here if init container or app container needs shared data
